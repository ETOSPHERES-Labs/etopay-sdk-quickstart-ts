name: "ci-node"
on:
  # allow manually triggering
  workflow_dispatch:

  # run this every night to make sure nothing breaks
  schedule:
    - cron: "0 0 * * *"

  # run on push to any branch
  push:

# cancel the job if a newer pipeline starts for the same MR or branch
concurrency:
  group: ci-node-${{ github.ref }}
  cancel-in-progress: true

defaults:
 run:
  working-directory: node-example

jobs:
  build-node-project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export BUN_BIN="$HOME/.bun/bin"
          echo "$BUN_BIN" >> $GITHUB_PATH

      - name: Install dependencies
        run: bun install

      - name: Check TypeScript builds
        run: bun tsc --noEmit # ensures the code compiles without generating .js file.

  lint-node-project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export BUN_BIN="$HOME/.bun/bin"
          echo "$BUN_BIN" >> $GITHUB_PATH

      - name: Install dependencies
        run: bun install

      - name: Run ESLint
        run: bun eslint . --max-warnings=0

  test-node-project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export BUN_BIN="$HOME/.bun/bin"
          echo "$BUN_BIN" >> $GITHUB_PATH

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test
  
  run-example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export BUN_BIN="$HOME/.bun/bin"
          echo "$BUN_BIN" >> $GITHUB_PATH

      - name: Install dependencies
        run: bun install

      # Create .env file from secret
      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      # Create config.json file from secret
      - name: Create config.json file
        run: echo ${{ secrets.CONFIG_JSON }} > config.json

      # Run the example
      - name: Run example
        run: ls -al && bun src/index.ts
